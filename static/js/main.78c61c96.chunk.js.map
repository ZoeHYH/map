{"version":3,"sources":["components/Header.js","components/Table.js","components/Map.js","key.js","App.js","serviceWorker.js","index.js"],"names":["StyledToolbar","styled","Toolbar","Header","drawer","toggleDrawer","IconButton","edge","color","onClick","aria-label","tableHead","name","label","StyledCell","TableCell","SortHead","head","order","orderCell","handleSort","TableHead","TableRow","map","cell","sortDirection","TableSortLabel","active","direction","StyledRow","StyledCollapseCell","Row","row","openDetail","handleOpenDetail","hover","place_id","size","distance","rating","repeat","price_level","colSpan","length","Collapse","in","timeout","unmountOnExit","Typography","variant","formatted_address","formatted_phone_number","opening_hours","isOpen","weekday_text","day","slice","sortCompare","a","b","target","x","y","toUpperCase","StyledTable","TableContainer","DataTable","data","handleData","useState","setOrder","setOrderCell","Table","stickyHeader","newData","sort","reverse","TableBody","alignCenter","css","StyledLocation","div","Location","className","StyledMarker","StyledMarkerRange","Marker","StyledMap","Map","center","zoom","lat","lng","currentPosition","setCurrentPosition","mapApiLoaded","setMapApiLoaded","mapInstance","setMapInstance","mapApi","setMapApi","restaurants","setRestaurants","setOpenDetail","setDrawer","useEffect","places","PlacesService","nearbySearch","location","type","rankby","radius","results","status","PlacesServiceStatus","OK","geometry","rlat1","Math","PI","rlat2","difflat","difflng","asin","sqrt","sin","cos","haversineDistance","toFixed","state","forEach","item","open","event","key","getDetails","placeId","fields","SwipeableDrawer","anchor","onOpen","onClose","bootstrapURLKeys","libraries","onChange","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","defaultProps","App","Boolean","window","hostname","match","theme","createMuiTheme","ReactDOM","render","StylesProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78c61c96.chunk.js","sourcesContent":["import { Toolbar, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst StyledToolbar = styled(Toolbar)`\n  z-index: 3000;\n  position: fixed;\n`;\n\nexport const Header = ({ drawer, toggleDrawer }) => {\n  return (\n    <StyledToolbar>\n      <IconButton\n        edge=\"start\"\n        color=\"inherit\"\n        onClick={toggleDrawer(!drawer)}\n        aria-label=\"open drawer\"\n      >\n        <MenuIcon />\n      </IconButton>\n    </StyledToolbar>\n  );\n};\n\nHeader.propTypes = {\n  drawer: PropTypes.bool,\n  toggleDrawer: PropTypes.func,\n};\n","import styled from \"styled-components\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableSortLabel,\n  TableCell,\n  Collapse,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nconst tableHead = [\n  {\n    name: \"name\",\n    label: \"名稱\",\n  },\n  {\n    name: \"distance\",\n    label: \"距離 km\",\n  },\n  {\n    name: \"rating\",\n    label: \"評價\",\n  },\n  {\n    name: \"price_level\",\n    label: \"價格\",\n  },\n];\n\nconst StyledCell = styled(TableCell)`\n  padding: 0.5rem;\n`;\n\nconst SortHead = ({ head, order, orderCell, handleSort }) => (\n  <TableHead>\n    <TableRow>\n      <StyledCell />\n      {head.map((cell) => (\n        <StyledCell\n          key={cell.name}\n          sortDirection={orderCell === cell.name ? order : false}\n        >\n          <TableSortLabel\n            active={orderCell === cell.name}\n            direction={orderCell === cell.name ? order : \"asc\"}\n            onClick={() => handleSort(cell.name)}\n          >\n            {cell.label}\n          </TableSortLabel>\n        </StyledCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n\nSortHead.propTypes = {\n  head: PropTypes.array,\n  order: PropTypes.string,\n  orderCell: PropTypes.string,\n  handleSort: PropTypes.func,\n};\n\nconst StyledRow = styled(TableRow)`\n  & > * {\n    border: none;\n  }\n`;\n\nconst StyledCollapseCell = styled(StyledCell)`\n  padding: 0 1rem;\n`;\n\nconst Row = ({ row, openDetail, handleOpenDetail }) => (\n  <>\n    <StyledRow\n      hover\n      onClick={() => handleOpenDetail(row.place_id, openDetail === false)}\n    >\n      <StyledCell>\n        <IconButton\n          size=\"small\"\n          onClick={() => handleOpenDetail(row.place_id, openDetail === false)}\n        >\n          {openDetail ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n        </IconButton>\n      </StyledCell>\n      <StyledCell>{row.name}</StyledCell>\n      <StyledCell>{row.distance}</StyledCell>\n      <StyledCell>{row.rating}</StyledCell>\n      <StyledCell>{\"$\".repeat(row.price_level)}</StyledCell>\n    </StyledRow>\n    <TableRow>\n      <StyledCollapseCell colSpan={tableHead.length + 1}>\n        <Collapse in={openDetail !== false} timeout=\"auto\" unmountOnExit>\n          <Typography variant=\"h6\">{row.name}</Typography>\n          {openDetail && (\n            <>\n              <Typography variant=\"subtitle1\">\n                {openDetail.formatted_address}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {openDetail.formatted_phone_number}\n              </Typography>\n              <Typography variant=\"subtitle1\">營業時間</Typography>\n              <Typography variant=\"subtitle2\">\n                {openDetail.opening_hours.isOpen() ? \"營業中\" : \"尚未開始營業\"}\n              </Typography>\n              {openDetail.opening_hours.weekday_text.map((day) => (\n                <Typography key={day.slice(2, 3)} variant=\"body2\">\n                  {day}\n                </Typography>\n              ))}\n            </>\n          )}\n        </Collapse>\n      </StyledCollapseCell>\n    </TableRow>\n  </>\n);\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    place_id: PropTypes.string,\n    name: PropTypes.string,\n    distance: PropTypes.string,\n    rating: PropTypes.number,\n    price_level: PropTypes.number,\n  }),\n  openDetail: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  handleOpenDetail: PropTypes.func,\n};\n\nconst sortCompare = (a, b, target) => {\n  let x = a[target];\n  let y = b[target];\n  if (typeof x === \"string\" || typeof y === \"string\") {\n    x = x.toUpperCase();\n    y = y.toUpperCase();\n  }\n  if (!x || x < y) return -1;\n  if (x > y) return 1;\n  return 0;\n};\n\nconst StyledTable = styled(TableContainer)`\n  max-width: 500px;\n  word-break: keep-all;\n`;\n\nexport const DataTable = ({\n  data,\n  handleData,\n  openDetail,\n  handleOpenDetail,\n}) => {\n  const [order, setOrder] = useState(null);\n  const [orderCell, setOrderCell] = useState(null);\n\n  const handleSort = (target) => {\n    if (target !== orderCell || !order || order === \"asc\") {\n      setOrder(\"desc\");\n      const newData = data.sort((a, b) => sortCompare(a, b, target)).reverse();\n      handleData(newData);\n    }\n    if (order === \"desc\") {\n      setOrder(\"asc\");\n      const newData = data.sort((a, b) => sortCompare(a, b, target));\n      handleData(newData);\n    }\n    setOrderCell(target);\n  };\n  return (\n    <StyledTable>\n      <Table stickyHeader size=\"small\">\n        <SortHead\n          head={tableHead}\n          order={order}\n          orderCell={orderCell}\n          handleSort={handleSort}\n        />\n        <TableBody>\n          {data.map((row) => (\n            <Row\n              key={row.name}\n              row={row}\n              openDetail={openDetail[row.place_id]}\n              handleOpenDetail={handleOpenDetail}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </StyledTable>\n  );\n};\n\nDataTable.propTypes = {\n  data: PropTypes.array,\n  handleData: PropTypes.func,\n  openDetail: PropTypes.object,\n  handleOpenDetail: PropTypes.func,\n};\n","import { key } from \"../key\";\nimport GoogleMapReact from \"google-map-react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { SwipeableDrawer, Toolbar } from \"@material-ui/core\";\nimport { Header } from \"./Header\";\nimport { DataTable } from \"./Table\";\n\nconst alignCenter = css`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledLocation = styled.div`\n  position: relative;\n  transform: translate(-50%, -50%);\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  border: 0px solid transparent;\n  background: rgba(9, 157, 148, 0.8);\n  box-shadow: 0px 0px 1rem rgba(9, 157, 148, 0.6),\n    inset 0px 0px 1rem rgba(9, 157, 148, 0.6);\n  &:hover,\n  &.active {\n    transition: all 0.3s ease-in-out;\n    border: 0.25rem solid rgb(9, 157, 148);\n  }\n  &.active {\n    background: none;\n  }\n`;\n\nconst Location = ({ place_id, openDetail, handleOpenDetail }) => (\n  <StyledLocation\n    className={openDetail && \"active\"}\n    onClick={() => handleOpenDetail(place_id, openDetail === false)}\n  ></StyledLocation>\n);\n\nLocation.propTypes = {\n  place_id: PropTypes.string,\n  openDetail: PropTypes.bool,\n  handleOpenDetail: PropTypes.func,\n};\n\nconst StyledMarker = styled.div`\n  ${alignCenter}\n  width: .25rem;\n  height: 0.25rem;\n  background: #ffffff;\n  border: 0.25rem solid rgb(14, 255, 241);\n  box-shadow: 0px 0px 0.5rem rgba(14, 255, 241, 0.8);\n  border-radius: 50%;\n`;\nconst StyledMarkerRange = styled.div`\n  ${alignCenter}\n  width: 5rem;\n  height: 5rem;\n  border-radius: 50%;\n  background: rgba(14, 255, 241, 0.1);\n  box-shadow: inset 0px 0px 2.5rem rgba(14, 255, 241, 0.1);\n`;\nconst Marker = () => (\n  <StyledMarkerRange>\n    <StyledMarker></StyledMarker>\n  </StyledMarkerRange>\n);\n\nMarker.propTypes = {\n  text: PropTypes.string,\n};\n\nconst StyledMap = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\n\nfunction haversineDistance(a, b) {\n  const R = 6371.071;\n  let rlat1 = a.lat * (Math.PI / 180);\n  let rlat2 = b.lat * (Math.PI / 180);\n  var difflat = rlat2 - rlat1;\n  var difflng = (b.lng - a.lng) * (Math.PI / 180);\n  let distance =\n    2 *\n    R *\n    Math.asin(\n      Math.sqrt(\n        Math.sin(difflat / 2) * Math.sin(difflat / 2) +\n          Math.cos(rlat1) *\n            Math.cos(rlat2) *\n            Math.sin(difflng / 2) *\n            Math.sin(difflng / 2)\n      )\n    );\n  return distance;\n}\n\nexport const Map = ({ center, zoom }) => {\n  const [currentPosition, setCurrentPosition] = useState({\n    lat: 25.038705,\n    lng: 121.567338,\n  });\n  const [mapApiLoaded, setMapApiLoaded] = useState(false);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapApi, setMapApi] = useState(null);\n  const [restaurants, setRestaurants] = useState(null);\n  const [openDetail, setOpenDetail] = useState({});\n  const [drawer, setDrawer] = useState(true);\n\n  const handleApiLoaded = ({ map, maps }) => {\n    setMapInstance(map);\n    setMapApi(maps);\n    setMapApiLoaded(true);\n  };\n\n  const handleCenterChange = () => {\n    if (mapApiLoaded) {\n      setCurrentPosition({\n        lat: mapInstance.center.lat(),\n        lng: mapInstance.center.lng(),\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (mapApiLoaded)\n      new mapApi.places.PlacesService(mapInstance).nearbySearch(\n        {\n          location: currentPosition,\n          type: \"restaurant\",\n          rankby: \"distance\",\n          radius: 2000,\n        },\n        (results, status) => {\n          if (status === mapApi.places.PlacesServiceStatus.OK) {\n            const data = results.map(\n              ({ place_id, name, rating, price_level, geometry }) => {\n                let distance = haversineDistance(currentPosition, {\n                  lat: geometry.location.lat(),\n                  lng: geometry.location.lng(),\n                }).toFixed(2);\n                return {\n                  place_id,\n                  name,\n                  rating,\n                  price_level,\n                  geometry,\n                  distance,\n                };\n              }\n            );\n            setRestaurants(data);\n            const state = {};\n            data.forEach((item) => (state[item.place_id] = false));\n            setOpenDetail(state);\n          }\n        }\n      );\n  }, [mapApiLoaded, mapApi, mapInstance, currentPosition]);\n\n  const handleRestaurants = (data) => {\n    setRestaurants(data);\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setDrawer(open);\n  };\n\n  const handleOpenDetail = (target, isOpen) => {\n    if (isOpen === false)\n      return setOpenDetail({ ...openDetail, [target]: isOpen });\n    new mapApi.places.PlacesService(mapInstance).getDetails(\n      {\n        placeId: target,\n        fields: [\n          \"formatted_address\",\n          \"formatted_phone_number\",\n          \"opening_hours\",\n        ],\n      },\n      (results, status) => {\n        if (status === mapApi.places.PlacesServiceStatus.OK) {\n          setOpenDetail({\n            ...openDetail,\n            [target]: {\n              formatted_address: results.formatted_address,\n              formatted_phone_number: results.formatted_phone_number,\n              opening_hours: results.opening_hours,\n            },\n          });\n          setDrawer(true);\n        }\n      }\n    );\n  };\n  return (\n    <>\n      <Header drawer={drawer} toggleDrawer={toggleDrawer} />\n      <SwipeableDrawer\n        anchor={\"left\"}\n        variant=\"persistent\"\n        open={drawer}\n        onOpen={toggleDrawer(true)}\n        onClose={toggleDrawer(false)}\n      >\n        <Toolbar />\n        {restaurants && (\n          <DataTable\n            data={restaurants}\n            handleData={handleRestaurants}\n            openDetail={openDetail}\n            handleOpenDetail={handleOpenDetail}\n          />\n        )}\n      </SwipeableDrawer>\n      <StyledMap>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key, libraries: [\"places\"] }}\n          onChange={handleCenterChange}\n          defaultCenter={center}\n          defaultZoom={zoom}\n          yesIWantToUseGoogleMapApiInternals={true}\n          onGoogleApiLoaded={handleApiLoaded}\n        >\n          <Marker lat={currentPosition.lat} lng={currentPosition.lng} />\n          {restaurants &&\n            restaurants.map(({ geometry, name, place_id }) => (\n              <Location\n                key={name}\n                lat={geometry.location.lat()}\n                lng={geometry.location.lng()}\n                place_id={place_id}\n                openDetail={openDetail[place_id] !== false}\n                handleOpenDetail={handleOpenDetail}\n              />\n            ))}\n        </GoogleMapReact>\n      </StyledMap>\n    </>\n  );\n};\n\nMap.defaultProps = {\n  center: { lat: 25.038705, lng: 121.567338 },\n  zoom: 16,\n};\n\nMap.propTypes = {\n  center: PropTypes.shape({ lat: PropTypes.number, lng: PropTypes.number }),\n  zoom: PropTypes.number,\n};\n","export const key = \"AIzaSyCd6kNCPNNnVZnd45Es3WTY8xfzeYdhUQQ\";\n","import React from \"react\";\r\nimport { Map } from \"./components/Map\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Map />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {\r\n  ThemeProvider as MuiThemeProvider,\r\n  createMuiTheme,\r\n  StylesProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nconst theme = createMuiTheme({});\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <ThemeProvider theme={theme}>\r\n      <StylesProvider injectFirst>\r\n        <App />\r\n      </StylesProvider>\r\n    </ThemeProvider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}